buildscript {
    ext {
        springBootVersion = '2.3.1.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.9.RELEASE"
        classpath "org.asciidoctor:asciidoctor-gradle-jvm:2.4.0"
    }
}

// Gradle Wrapper
wrapper {
    gradleVersion = '5.6.4'
    distributionUrl = distributionUrl.replace("bin", "all")
}

allprojects {
    group = 'kr.co.picktime'
    version = '0.0.1'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    repositories {
        mavenCentral()
    }

    /*configurations {
        all {
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        }
    }*/

    dependencies {
        implementation 'mysql:mysql-connector-java'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        compileOnly 'org.projectlombok:lombok'
        testImplementation 'org.projectlombok:lombok'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }
}

project(':picktime-core') {
    dependencies {
        testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    }
}

project(':picktime-admin-webapp') {
    apply plugin: 'war'

    dependencies {
        implementation project(':picktime-core-datasource-mybatis')
        implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
        implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
        providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
    }
}

project(':picktime-webapi') {
    apply plugin: 'war'
    apply plugin: 'org.asciidoctor.jvm.convert'

    dependencies {
        implementation project(':picktime-core-datasource-mybatis')
        testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
        providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    }
}

project(":picktime-web-crawler") {
    apply plugin: 'war'

    dependencies {
        implementation files('libs/instagram-crawler.jar')
        implementation 'org.springframework.boot:spring-boot-starter-batch'
        providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    }
}

project(":picktime-core-datasource-mybatis") {
    apply plugin: 'java-library'

    dependencies {
        api 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.3'
    }
}

project(":picktime-core-datasource-jpa") {
    apply plugin: 'java-library'

    dependencies {
        api 'org.springframework.boot:spring-boot-starter-data-jpa'
    }
}